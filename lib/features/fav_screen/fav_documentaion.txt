// favorite_screen.dart

import 'package:flutter/material.dart';
import 'package:meal_recommendations_a2/core/utiles/app_colors.dart';
import 'package:meal_recommendations_a2/core/utiles/app_text_styles.dart';
import 'package:meal_recommendations_a2/core/utiles/assets.dart';
import 'package:meal_recommendations_a2/core/utiles/custom_app_bar.dart';
import 'package:meal_recommendations_a2/core/utiles/custom_bottom_nav_bar.dart';

/// A screen that displays the user's favorite meals in a list.
/// Each favorite item is represented as a [FavoriteItemCard].
/// 
/// This screen includes a custom app bar and a bottom navigation bar for navigation.
/// The [FavoriteScreen] is a stateless widget and is responsible for laying out
/// the structure and appearance of the favorite meals list.
class FavoriteScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: CustomAppBar(),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView.builder(
          itemCount: 4, // Number of items to display in the list (adjustable)
          itemBuilder: (context, index) {
            return Padding(
              padding: const EdgeInsets.symmetric(vertical: 8.0),
              child: FavoriteItemCard(),
            );
          },
        ),
      ),
      bottomNavigationBar: CustomBottomNavBar(
        currentIndex: 1,
        onTap: (index) {
          // Handle navigation between screens based on the selected index
        },
      ),
    );
  }
}

/// A card widget that displays information about a favorite meal item.
///
/// The [FavoriteItemCard] includes a circular avatar, meal information (such as type,
/// name, ingredients, and preparation time), rating, and a favorite icon button.
/// This widget is designed to be reused within a list, with a shadow and border effect
/// for enhanced appearance.
class FavoriteItemCard extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        border: Border.all(color: AppColors.c_001A3F, width: 2), // Outer border styling
        borderRadius: BorderRadius.circular(15), // Rounded corners for border
      ),
      child: Card(
        elevation: 4, // Adds shadow around the card for depth effect
        shadowColor: Colors.grey.withOpacity(0.5), // Custom shadow color and opacity
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
        margin: EdgeInsets.all(8), // Space between outer border and card content
        child: Padding(
          padding: const EdgeInsets.all(12.0), // Padding inside the card
          child: Row(
            children: [
              CircleAvatar(
                radius: 30,
                backgroundImage: AssetImage(Assets.Pizza), // Image asset for meal icon
              ),
              SizedBox(width: 12),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'vegan', // Text for meal type
                      style: AppTextStyles.style_med_15.copyWith(color: AppColors.c_001A3F),
                    ),
                    Text(
                      'italian pizza', // Text for meal name
                      style: AppTextStyles.style_bold_20.copyWith(color: AppColors.c_000000),
                    ),
                    SizedBox(height: 4),
                    Row(
                      children: [
                        Text(
                          '12 ingredients', // Text for ingredient count
                          style: AppTextStyles.style_med_15.copyWith(color: AppColors.c_8A8A8A),
                        ),
                        SizedBox(width: 10),
                        Text(
                          '30min', // Text for preparation time
                          style: AppTextStyles.style_med_15.copyWith(color: AppColors.c_001A3F),
                        ),
                      ],
                    ),
                    SizedBox(height: 8),
                    Row(
                      children: List.generate(5, (index) {
                        return Icon(
                          Icons.star, // Icon for rating stars
                          size: 14,
                          color: Colors.yellow[700], // Star color
                        );
                      }),
                    ),
                  ],
                ),
              ),
              IconButton(
                icon: Icon(Icons.favorite, color: Colors.blue), // Favorite icon button
                onPressed: () {
                  // Action when favorite icon is tapped
                },
              ),
            ],
          ),
        ),
      ),
    );
  }
}
